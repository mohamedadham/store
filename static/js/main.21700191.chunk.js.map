{"version":3,"sources":["ProductDetails.js","Home.js","Products.js","cart.js","App.js","serviceWorker.js","index.js"],"names":["ProductDetails","match","handleCart","useState","item","setItem","useEffect","fetchItem","a","fetch","params","id","method","headers","Headers","json","data","console","log","className","images","src","icon","alt","name","description","cost","type","rarity","ratings","avgStars","totalPoints","onClick","Home","Products","handleClick","information","store","to","itemId","Cart","handle","e","props","handleChange","this","value","quantity","onChange","delete","React","Component","App","state","products","cart","totalPrice","product","repeated","forEach","push","setState","total","i","fetchProduct","c","length","splice","event","cartItem","target","handleProduct","then","response","style","color","fontSize","faShoppingCart","path","exact","component","render","map","key","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21700191.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport {Link, Switch, Route} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n    function ProductDetails({match,handleCart}) {\r\n        \r\n    const [item,setItem]=useState({})\r\n    \r\n    useEffect(()=>{\r\n        \r\n        fetchItem();\r\n        \r\n          },[])\r\n    \r\n    const fetchItem= async ()=>{\r\n        const fetchItem= await fetch(`https://fortnite-api.theapinetwork.com/item/get?id=${match.params.id}`, \r\n                      { \r\n                        method: 'get', \r\n                        headers: new Headers({\r\n                        \"Authorization\": \"e8dc5e3d7edc21ac2dcfd847d8d29eae\"\r\n                        }) })\r\n        const item=await fetchItem.json();\r\n        setItem(item.data.item)\r\n        \r\n    }\r\n    \r\n        \r\n  \r\n         \r\n  \r\n    \r\n \r\nconsole.log(\"aaaaa\")\r\n   \r\n  return (\r\n    <div className=\"App\">\r\n          { item.images? <img  src={item.images.icon} alt=\"mak\"/>:null}\r\n                   <h2>{item.name}</h2>\r\n                    <h3>{item.description}</h3>\r\n                    <h3>{item.cost}</h3>\r\n                    <h3>{item.type}</h3>\r\n                    <h3>{item.rarity}</h3>\r\n             { item.ratings?( <p>Average Stars: {item.ratings.avgStars} </p> ,\r\n              <p> Votes numbers: {item.ratings.avgStars} </p>,<p>Total points: {item.ratings.totalPoints} </p>\r\n                          ) :null}    \r\n            { item.ratings?( \r\n                  <p> Votes numbers: {item.ratings.avgStars} </p>\r\n                              ) :null}    \r\n            { item.ratings?( <p>Total points: {item.ratings.totalPoints} </p>\r\n                              ) :null}    \r\n            \r\n\r\n                  \r\n  <button onClick={()=>{handleCart(item,match.params.id)}}>Add to cart</button>\r\n        \r\n                    \r\n                </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetails;\r\n","import React from 'react';\r\n\r\n\r\nfunction Home (){\r\n   \r\n\r\n  \r\n      \r\n            \r\n            \r\n            \r\n            return(\r\n            \r\n            \r\n                <div className=\"App\">\r\n                \r\n                      <h2>Welcome to the Store</h2>\r\n               \r\n     \r\n                </div>\r\n     \r\n            \r\n        )\r\n   \r\n        \r\n    \r\n}\r\n \r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link, Switch, Route} from 'react-router-dom'\r\nimport ProductDetails from './ProductDetails'\r\nimport Home from './Home'\r\n\r\nfunction Products({item,match,handleClick}) {\r\n  \r\n   console.log(match)\r\n  return (\r\n    <div className=\"item\">\r\n                    <h2>{item.item.name }</h2>\r\n                     <img src={item.item.images.icon} alt={item.item.images.information}/>\r\n                    <p>{item.item.description } </p>\r\n                    <p>${item.store.cost }</p>\r\n                   <li>\r\n                        <Link to={`/products/${item.itemId}`}> View </Link>\r\n                        </li>\r\n                <button onClick={()=>{handleClick(item)}}>Add to cart</button>\r\n     \r\n               \r\n\r\n                    \r\n                </div>\r\n\r\n        \r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Cart extends React.Component {\r\n   \r\n\r\n  handle=(e)=>{\r\n     this.props.handleChange(e,this.props.item)\r\n   }\r\n  \r\n        render(){\r\n            \r\n            \r\n            \r\n            return(\r\n            \r\n            \r\n                <div className=\"cart\">\r\n               \r\n                \r\n                <Link to={`store/products/${this.props.item.itemId}`}> <h2>{this.props.item.item.name }</h2> </Link>\r\n                 \r\n                <div className=\"cart-description\">\r\n                    <div className=\"cart-left\">\r\n                        <img src={this.props.item.item.images.icon} alt=\"product \"/>\r\n                        <p>{this.props.item.item.description } </p>\r\n                    </div>\r\n                    <h2 className=\"item-price\">${this.props.item.store.cost }</h2>\r\n                </div>\r\n                 <div className=\"cart-bottom\">\r\n                <div className=\"quantity\">\r\n                <h3>Quantity</h3><select value={this.props.item.quantity} onChange={this.handle}>\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                      <option value=\"6\">6</option>\r\n                      <option value=\"7\">7</option>\r\n                      <option value=\"8\">8</option>\r\n                      <option value=\"9\">9</option>\r\n                      <option value=\"10\">10</option>\r\n                  </select>\r\n                </div>\r\n                    <button onClick={()=>{this.props.delete(this.props.item)}}>Delete</button>\r\n                </div>\r\n     \r\n                </div>\r\n     \r\n            \r\n        )\r\n   \r\n        }\r\n    \r\n}\r\n \r\n\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link, Switch, Route} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport Products from './Products'\r\nimport Cart from './cart'\r\nimport Home from './Home'\r\nimport ProductDetails from './ProductDetails'\r\nclass App extends React.Component {\r\n    state={\r\n        products:[],\r\n        cart:[],\r\n        totalPrice:0,\r\n        product:{}\r\n    }\r\n    \r\n    \r\n    handleClick=(e)=>{\r\n      \r\n    \r\n   let repeated=false\r\n       const {cart}=this.state\r\n       \r\n       cart.forEach(item=>{\r\n         \r\n           if(item.itemId===e.itemId){\r\n           \r\n               item.quantity+=1;\r\n               \r\n               repeated=!repeated;\r\n           }\r\n          \r\n       })\r\n       \r\n       if(!repeated) {\r\n           cart.push(e)\r\n       \r\n         this.setState({cart:cart})\r\n     }\r\n            this.total()\r\n    }\r\n    handleCart=(item,id)=>{\r\n      item.item={}\r\n    \r\n   let repeated=false\r\n       const {cart,products}=this.state\r\n       \r\n       cart.forEach(item=>{\r\n         \r\n           if(item.itemId===id){\r\n           \r\n               item.quantity+=1;\r\n               \r\n               repeated=!repeated;\r\n           }\r\n          \r\n       })\r\n       \r\n       if(!repeated) {\r\n           products.forEach(item=>{\r\n               if(item.itemId===id){\r\n                          cart.push(item)\r\n               }\r\n           })\r\n       \r\n    \r\n       \r\n         this.setState({cart:cart})\r\n     }\r\n            this.total()\r\n    }\r\n    \r\n    \r\n    total=()=>{\r\n        const {cart}=this.state\r\n        let total=0\r\n        let i=0;\r\n        \r\n        cart.forEach((item)=>{\r\n            \r\n          \r\n                 if(item.store)total +=item.store.cost*item.quantity\r\n                                \r\n            else total+=item.cost*item.quantity\r\n                 \r\n            i++;\r\n          \r\n        } )\r\n        \r\n     \r\n     return this.setState({totalPrice:total})\r\n           \r\n      \r\n        \r\n    }\r\n    \r\n    fetchProduct=(id)=>{\r\n        \r\n        this.setState({product:id})\r\n                 \r\n    }\r\n      delete=(e)=>{\r\n        const {cart}=this.state\r\n        let c=0;\r\n        \r\n        for(let i=0;i<cart.length;i++){\r\n            if(cart[i].itemId===e.itemId){\r\n                 c=i;\r\n                break\r\n            }\r\n           \r\n        }\r\n\r\n        cart[c].quantity=1;\r\n        cart.splice(c,1)\r\n        this.total()\r\n        return this.setState({cart:cart})\r\n        \r\n    }\r\n      \r\n       handleChange=(event,cartItem)=> {\r\n         const {cart}=this.state\r\n       console.log(event.target)\r\n         cart.forEach(item=>{\r\n             if(item.itemId===cartItem.itemId){\r\n              \r\n              item.quantity=event.target.value\r\n              console.log(item.quantity)\r\n             }\r\n         })\r\n       this.setState({cart:cart});\r\n         this.total()\r\n  }\r\n    \r\n    \r\n    componentDidMount(){\r\n                fetch(\"https://fortnite-api.theapinetwork.com/store/get\", \r\n                      { \r\n                        method: 'get', \r\n                        headers: new Headers({\r\n                        \"Authorization\": \"e8dc5e3d7edc21ac2dcfd847d8d29eae\"\r\n                        })\r\n                        }).then(response => response.json())\r\n                        .then(data => { data.data.forEach(item => {item.quantity=1});\r\n                    this.setState({products:data.data})}\r\n                             )\r\n                \r\n                \r\n        \r\n            }\r\nhandleProduct=(id)=>{\r\n    console.log(id)\r\n    this.setState({product:id})\r\n    \r\n}\r\n\r\n\r\n    render(){\r\n            const {products,cart,product}=this.state\r\n        return (\r\n    <div className=\"App\">\r\n     <header>\r\n           \r\n               <Link to='/store' ><h2>Mobile Store</h2></Link>\r\n             <Link to='/store/products' ><h2>Products</h2></Link>\r\n           \r\n                 <Link to='/cart'><FontAwesomeIcon style={{color:'white',fontSize:'4em'}} icon={faShoppingCart} /> </Link>\r\n           \r\n            </header>\r\n      <Switch>\r\n        <Route path=\"/store\" exact component={Home} />\r\n        <Route path=\"/store/products\" exact   render={(props)=>\r\n           \r\n                <div className=\"menu-items\">\r\n                     \r\n                   {products.map(item => <Products item={item} key={item.itemId} handleClick={this.handleClick} {...props} />)}\r\n            \r\n            </div> \r\n        \r\n                }/>\r\n                \r\n                 <Route path={`/products/:id`}  render={(props)=> <ProductDetails {...props} handleCart={this.handleCart} product={product}/>} />\r\n                     \r\n         <Route path=\"/cart\" render={()=>\r\n            <div className=\"cart-items\">\r\n                <h2 className=\"shoppingTxt\">Shopping Cart</h2>\r\n                <div className=\"cart-head\">\r\n                    <h3>Items</h3>\r\n                    <h3>price</h3>\r\n                \r\n                </div>\r\n                   {cart.map(item => <Cart item={item} key={item.itemId} handleChange={this.handleChange} delete={this.delete}/>)}\r\n                <h2 className=\"total\">Subtotal: ${this.state.totalPrice}</h2>\r\n            \r\n            </div>}/>\r\n      \r\n      \r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n        \r\n    }\r\n  \r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}