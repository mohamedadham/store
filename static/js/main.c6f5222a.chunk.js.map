{"version":3,"sources":["ProductDetails.js","Home.js","Products.js","cart.js","App.js","serviceWorker.js","index.js"],"names":["ProductDetails","match","handleCart","useState","item","setItem","useEffect","fetchItem","a","fetch","params","id","method","headers","Headers","json","data","console","log","className","images","src","icon","alt","name","description","cost","type","rarity","ratings","avgStars","totalPoints","onClick","Home","Products","handleClick","information","store","to","url","itemId","Cart","handle","e","props","handleChange","this","value","quantity","onChange","delete","React","Component","App","state","products","cart","totalPrice","product","repeated","forEach","push","setState","total","i","fetchProduct","c","length","splice","event","cartItem","target","handleProduct","then","response","style","color","fontSize","faShoppingCart","path","exact","component","render","map","key","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oVA+DeA,MAxDX,YAA6C,IAApBC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,WAAa,EAEvBC,mBAAS,IAFc,mBAErCC,EAFqC,KAEhCC,EAFgC,KAI5CC,oBAAU,WAENC,KAEI,IAER,IAAMA,EAAS,sCAAE,8BAAAC,EAAA,qEACUC,MAAM,sDAAD,OAAuDR,EAAMS,OAAOC,IAClF,CACEC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACrB,cAAiB,uCALpB,cACPP,EADO,gBAOIA,EAAUQ,OAPd,OAOPX,EAPO,OAQbC,EAAQD,EAAKY,KAAKZ,MARL,yCAAF,qDAoBjB,OAFFa,QAAQC,IAAId,GAGR,yBAAKe,UAAU,OACPf,EAAKgB,OAAQ,yBAAMC,IAAKjB,EAAKgB,OAAOE,KAAMC,IAAI,QAAQ,KAC/C,4BAAKnB,EAAKoB,MACT,4BAAKpB,EAAKqB,aACV,4BAAKrB,EAAKsB,MACV,4BAAKtB,EAAKuB,MACV,4BAAKvB,EAAKwB,QACfxB,EAAKyB,SAAU,6CAAmBzB,EAAKyB,QAAQC,SAAhC,KAChB,8CAAoB1B,EAAKyB,QAAQC,SAAjC,KAAgD,4CAAkB1B,EAAKyB,QAAQE,YAA/B,MACjC,KACf3B,EAAKyB,QACD,8CAAoBzB,EAAKyB,QAAQC,SAAjC,KACe,KACnB1B,EAAKyB,QAAU,4CAAkBzB,EAAKyB,QAAQE,YAA/B,KACI,KAI/B,4BAAQC,QAAS,WAAK9B,EAAWE,EAAKH,EAAMS,OAAOC,MAAnD,iBC1BasB,MA3Bf,WAQY,OAGI,yBAAKd,UAAU,OAET,sDCaPe,MAvBf,YAA6C,IAA1B9B,EAAyB,EAAzBA,KAAKH,EAAoB,EAApBA,MAAMkC,EAAc,EAAdA,YAG5B,OADClB,QAAQC,IAAIjB,GAEX,yBAAKkB,UAAU,QACC,4BAAKf,EAAKA,KAAKoB,MACd,yBAAKH,IAAKjB,EAAKA,KAAKgB,OAAOE,KAAMC,IAAKnB,EAAKA,KAAKgB,OAAOgB,cACxD,2BAAIhC,EAAKA,KAAKqB,YAAd,KACA,+BAAKrB,EAAKiC,MAAMX,MACjB,4BACK,kBAAC,IAAD,CAAMY,GAAE,UAAKrC,EAAMsC,IAAX,YAAkBnC,EAAKoC,SAA/B,WAER,4BAAQR,QAAS,WAAKG,EAAY/B,KAAlC,iBCwCDqC,E,2MApDbC,OAAO,SAACC,GACL,EAAKC,MAAMC,aAAaF,EAAE,EAAKC,MAAMxC,O,wEAGzB,IAAD,OAIJ,OAGI,yBAAKe,UAAU,QAGf,kBAAC,IAAD,CAAMmB,GAAE,yBAAoBQ,KAAKF,MAAMxC,KAAKoC,SAA5C,IAAuD,4BAAKM,KAAKF,MAAMxC,KAAKA,KAAKoB,MAAjF,KAEA,yBAAKL,UAAU,oBACX,yBAAKA,UAAU,aACX,yBAAKE,IAAKyB,KAAKF,MAAMxC,KAAKA,KAAKgB,OAAOE,KAAMC,IAAI,aAChD,2BAAIuB,KAAKF,MAAMxC,KAAKA,KAAKqB,YAAzB,MAEJ,wBAAIN,UAAU,cAAd,IAA6B2B,KAAKF,MAAMxC,KAAKiC,MAAMX,OAEtD,yBAAKP,UAAU,eAChB,yBAAKA,UAAU,YACf,wCAAiB,4BAAQ4B,MAAOD,KAAKF,MAAMxC,KAAK4C,SAAUC,SAAUH,KAAKJ,QACnE,4BAAQK,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,QAGF,4BAAQf,QAAS,WAAK,EAAKY,MAAMM,OAAO,EAAKN,MAAMxC,QAAnD,gB,GAzCD+C,IAAMC,WC0MVC,E,2MAnMXC,MAAM,CACFC,SAAS,GACTC,KAAK,GACLC,WAAW,EACXC,QAAQ,I,EAIZvB,YAAY,SAACQ,GAGd,IAAIgB,GAAS,EACFH,EAAM,EAAKF,MAAXE,KAEPA,EAAKI,QAAQ,SAAAxD,GAENA,EAAKoC,SAASG,EAAEH,SAEfpC,EAAK4C,UAAU,EAEfW,GAAUA,KAKdA,IACAH,EAAKK,KAAKlB,GAEZ,EAAKmB,SAAS,CAACN,KAAKA,KAEjB,EAAKO,S,EAEb7D,WAAW,SAACE,EAAKO,GACfP,EAAKA,KAAK,GAEb,IAAIuD,GAAS,EAHU,EAIG,EAAKL,MAApBE,EAJY,EAIZA,KAAKD,EAJO,EAIPA,SAEZC,EAAKI,QAAQ,SAAAxD,GAENA,EAAKoC,SAAS7B,IAEbP,EAAK4C,UAAU,EAEfW,GAAUA,KAKdA,IACAJ,EAASK,QAAQ,SAAAxD,GACVA,EAAKoC,SAAS7B,GACN6C,EAAKK,KAAKzD,KAM3B,EAAK0D,SAAS,CAACN,KAAKA,KAEjB,EAAKO,S,EAIbA,MAAM,WAAK,IACAP,EAAM,EAAKF,MAAXE,KACHO,EAAM,EAeb,OAZGP,EAAKI,QAAQ,SAACxD,GAGFA,EAAKiC,MAAM0B,GAAQ3D,EAAKiC,MAAMX,KAAKtB,EAAK4C,SAE3Ce,GAAO3D,EAAKsB,KAAKtB,EAAK4C,SAE3BgB,IAKA,EAAKF,SAAS,CAACL,WAAWM,K,EAMlCE,aAAa,SAACtD,GAEV,EAAKmD,SAAS,CAACJ,QAAQ/C,K,EAGzBuC,OAAO,SAACP,GAIN,IAJW,IACJa,EAAM,EAAKF,MAAXE,KACHU,EAAE,EAEEF,EAAE,EAAEA,EAAER,EAAKW,OAAOH,IACtB,GAAGR,EAAKQ,GAAGxB,SAASG,EAAEH,OAAO,CACxB0B,EAAEF,EACH,MAQR,OAHAR,EAAKU,GAAGlB,SAAS,EACjBQ,EAAKY,OAAOF,EAAE,GACd,EAAKH,QACE,EAAKD,SAAS,CAACN,KAAKA,K,EAI5BX,aAAa,SAACwB,EAAMC,GAAa,IACxBd,EAAM,EAAKF,MAAXE,KACTvC,QAAQC,IAAImD,EAAME,QAChBf,EAAKI,QAAQ,SAAAxD,GACNA,EAAKoC,SAAS8B,EAAS9B,SAEzBpC,EAAK4C,SAASqB,EAAME,OAAOxB,MAC3B9B,QAAQC,IAAId,EAAK4C,aAGxB,EAAKc,SAAS,CAACN,KAAKA,IAClB,EAAKO,S,EAmBdS,cAAc,SAAC7D,GACXM,QAAQC,IAAIP,GACZ,EAAKmD,SAAS,CAACJ,QAAQ/C,K,mFAjBH,IAAD,OACPF,MAAM,mDACA,CACEG,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACrB,cAAiB,uCAEd2D,KAAK,SAAAC,GAAQ,OAAIA,EAAS3D,SAC5B0D,KAAK,SAAAzD,GAAUA,EAAKA,KAAK4C,QAAQ,SAAAxD,GAASA,EAAK4C,SAAS,IAC7D,EAAKc,SAAS,CAACP,SAASvC,EAAKA,W,+BAapC,IAAD,SAC8B8B,KAAKQ,MAA5BC,EADP,EACOA,SAASC,EADhB,EACgBA,KAAKE,EADrB,EACqBA,QACzB,OACJ,yBAAKvC,UAAU,OACd,gCAEU,kBAAC,IAAD,CAAMmB,GAAG,UAAU,6CACrB,kBAAC,IAAD,CAAMA,GAAG,mBAAmB,yCAExB,kBAAC,IAAD,CAAMA,GAAG,SAAQ,kBAAC,IAAD,CAAiBqC,MAAO,CAACC,MAAM,QAAQC,SAAS,OAAQvD,KAAMwD,MAA/E,MAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,OAAK,EAACC,UAAWhD,IACtC,kBAAC,IAAD,CAAO8C,KAAK,kBAAkBC,OAAK,EAAGE,OAAQ,SAACtC,GAAD,OAEtC,yBAAKzB,UAAU,cAEXoC,EAAS4B,IAAI,SAAA/E,GAAI,OAAI,kBAAC,EAAD,eAAUA,KAAMA,EAAMgF,IAAKhF,EAAKoC,OAAQL,YAAa,EAAKA,aAAiBS,UAMnG,kBAAC,IAAD,CAAOmC,KAAI,qBAAyBG,OAAQ,SAACtC,GAAD,OAAU,kBAAC,EAAD,iBAAoBA,EAApB,CAA2B1C,WAAY,EAAKA,WAAYwD,QAASA,QAC/H,kBAAC,IAAD,CAAOqB,KAAK,QAAQG,OAAQ,kBACzB,yBAAK/D,UAAU,cACX,wBAAIA,UAAU,eAAd,iBACA,yBAAKA,UAAU,aACX,qCACA,sCAGAqC,EAAK2B,IAAI,SAAA/E,GAAI,OAAI,kBAAC,EAAD,CAAMA,KAAMA,EAAMgF,IAAKhF,EAAKoC,OAAQK,aAAc,EAAKA,aAAcK,OAAQ,EAAKA,WACvG,wBAAI/B,UAAU,SAAd,cAAkC,EAAKmC,MAAMG,sB,GAvL3CN,IAAMC,WCGJiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvF,MACvB,2DCXNwF,IAASP,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBQ,SAASC,eAAe,SD0H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC,iB","file":"static/js/main.c6f5222a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {Link, Switch, Route} from 'react-router-dom'\n\n\n\n\n    function ProductDetails({match,handleCart}) {\n        \n    const [item,setItem]=useState({})\n    \n    useEffect(()=>{\n        \n        fetchItem();\n        \n          },[])\n    \n    const fetchItem= async ()=>{\n        const fetchItem= await fetch(`https://fortnite-api.theapinetwork.com/item/get?id=${match.params.id}`, \n                      { \n                        method: 'get', \n                        headers: new Headers({\n                        \"Authorization\": \"e8dc5e3d7edc21ac2dcfd847d8d29eae\"\n                        }) })\n        const item=await fetchItem.json();\n        setItem(item.data.item)\n        \n    }\n    \n        \n  \n         \n  \n    \n \nconsole.log(item)\n   \n  return (\n    <div className=\"App\">\n          { item.images? <img  src={item.images.icon} alt=\"mak\"/>:null}\n                   <h2>{item.name}</h2>\n                    <h3>{item.description}</h3>\n                    <h3>{item.cost}</h3>\n                    <h3>{item.type}</h3>\n                    <h3>{item.rarity}</h3>\n             { item.ratings?( <p>Average Stars: {item.ratings.avgStars} </p> ,\n              <p> Votes numbers: {item.ratings.avgStars} </p>,<p>Total points: {item.ratings.totalPoints} </p>\n                          ) :null}    \n            { item.ratings?( \n                  <p> Votes numbers: {item.ratings.avgStars} </p>\n                              ) :null}    \n            { item.ratings?( <p>Total points: {item.ratings.totalPoints} </p>\n                              ) :null}    \n            \n\n                  \n  <button onClick={()=>{handleCart(item,match.params.id)}}>Add to cart</button>\n        \n                    \n                </div>\n  );\n}\n\nexport default ProductDetails;\n","import React from 'react';\n\n\nfunction Home (){\n   \n\n  \n      \n            \n            \n            \n            return(\n            \n            \n                <div className=\"App\">\n                \n                      <h2>Welcome to the Store</h2>\n               \n     \n                </div>\n     \n            \n        )\n   \n        \n    \n}\n \n\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport {Link, Switch, Route} from 'react-router-dom'\nimport ProductDetails from './ProductDetails'\nimport Home from './Home'\n\nfunction Products({item,match,handleClick}) {\n  \n   console.log(match)\n  return (\n    <div className=\"item\">\n                    <h2>{item.item.name }</h2>\n                     <img src={item.item.images.icon} alt={item.item.images.information}/>\n                    <p>{item.item.description } </p>\n                    <p>${item.store.cost }</p>\n                   <li>\n                        <Link to={`${match.url}/${item.itemId}`}> View </Link>\n                        </li>\n                <button onClick={()=>{handleClick(item)}}>Add to cart</button>\n     \n               \n\n                    \n                </div>\n\n        \n  );\n}\n\nexport default Products;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nclass Cart extends React.Component {\n   \n\n  handle=(e)=>{\n     this.props.handleChange(e,this.props.item)\n   }\n  \n        render(){\n            \n            \n            \n            return(\n            \n            \n                <div className=\"cart\">\n               \n                \n                <Link to={`store/products/${this.props.item.itemId}`}> <h2>{this.props.item.item.name }</h2> </Link>\n                 \n                <div className=\"cart-description\">\n                    <div className=\"cart-left\">\n                        <img src={this.props.item.item.images.icon} alt=\"product \"/>\n                        <p>{this.props.item.item.description } </p>\n                    </div>\n                    <h2 className=\"item-price\">${this.props.item.store.cost }</h2>\n                </div>\n                 <div className=\"cart-bottom\">\n                <div className=\"quantity\">\n                <h3>Quantity</h3><select value={this.props.item.quantity} onChange={this.handle}>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                  </select>\n                </div>\n                    <button onClick={()=>{this.props.delete(this.props.item)}}>Delete</button>\n                </div>\n     \n                </div>\n     \n            \n        )\n   \n        }\n    \n}\n \n\n\nexport default Cart;\n","import React from 'react';\nimport './App.css';\nimport {Link, Switch, Route} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport Products from './Products'\nimport Cart from './cart'\nimport Home from './Home'\nimport ProductDetails from './ProductDetails'\nclass App extends React.Component {\n    state={\n        products:[],\n        cart:[],\n        totalPrice:0,\n        product:{}\n    }\n    \n    \n    handleClick=(e)=>{\n      \n    \n   let repeated=false\n       const {cart}=this.state\n       \n       cart.forEach(item=>{\n         \n           if(item.itemId===e.itemId){\n           \n               item.quantity+=1;\n               \n               repeated=!repeated;\n           }\n          \n       })\n       \n       if(!repeated) {\n           cart.push(e)\n       \n         this.setState({cart:cart})\n     }\n            this.total()\n    }\n    handleCart=(item,id)=>{\n      item.item={}\n    \n   let repeated=false\n       const {cart,products}=this.state\n       \n       cart.forEach(item=>{\n         \n           if(item.itemId===id){\n           \n               item.quantity+=1;\n               \n               repeated=!repeated;\n           }\n          \n       })\n       \n       if(!repeated) {\n           products.forEach(item=>{\n               if(item.itemId===id){\n                          cart.push(item)\n               }\n           })\n       \n    \n       \n         this.setState({cart:cart})\n     }\n            this.total()\n    }\n    \n    \n    total=()=>{\n        const {cart}=this.state\n        let total=0\n        let i=0;\n        \n        cart.forEach((item)=>{\n            \n          \n                 if(item.store)total +=item.store.cost*item.quantity\n                                \n            else total+=item.cost*item.quantity\n                 \n            i++;\n          \n        } )\n        \n     \n     return this.setState({totalPrice:total})\n           \n      \n        \n    }\n    \n    fetchProduct=(id)=>{\n        \n        this.setState({product:id})\n                 \n    }\n      delete=(e)=>{\n        const {cart}=this.state\n        let c=0;\n        \n        for(let i=0;i<cart.length;i++){\n            if(cart[i].itemId===e.itemId){\n                 c=i;\n                break\n            }\n           \n        }\n\n        cart[c].quantity=1;\n        cart.splice(c,1)\n        this.total()\n        return this.setState({cart:cart})\n        \n    }\n      \n       handleChange=(event,cartItem)=> {\n         const {cart}=this.state\n       console.log(event.target)\n         cart.forEach(item=>{\n             if(item.itemId===cartItem.itemId){\n              \n              item.quantity=event.target.value\n              console.log(item.quantity)\n             }\n         })\n       this.setState({cart:cart});\n         this.total()\n  }\n    \n    \n    componentDidMount(){\n                fetch(\"https://fortnite-api.theapinetwork.com/store/get\", \n                      { \n                        method: 'get', \n                        headers: new Headers({\n                        \"Authorization\": \"e8dc5e3d7edc21ac2dcfd847d8d29eae\"\n                        })\n                        }).then(response => response.json())\n                        .then(data => { data.data.forEach(item => {item.quantity=1});\n                    this.setState({products:data.data})}\n                             )\n                \n                \n        \n            }\nhandleProduct=(id)=>{\n    console.log(id)\n    this.setState({product:id})\n    \n}\n\n\n    render(){\n            const {products,cart,product}=this.state\n        return (\n    <div className=\"App\">\n     <header>\n           \n               <Link to='/store' ><h2>Mobile Store</h2></Link>\n             <Link to='/store/products' ><h2>Products</h2></Link>\n           \n                 <Link to='/cart'><FontAwesomeIcon style={{color:'white',fontSize:'4em'}} icon={faShoppingCart} /> </Link>\n           \n            </header>\n      <Switch>\n        <Route path=\"/store\" exact component={Home} />\n        <Route path=\"/store/products\" exact   render={(props)=>\n           \n                <div className=\"menu-items\">\n                     \n                   {products.map(item => <Products item={item} key={item.itemId} handleClick={this.handleClick} {...props} />)}\n            \n            </div> \n        \n                }/>\n                \n                 <Route path={`store/products/:id`}  render={(props)=> <ProductDetails {...props} handleCart={this.handleCart} product={product}/>} />\n         <Route path=\"/cart\" render={()=>\n            <div className=\"cart-items\">\n                <h2 className=\"shoppingTxt\">Shopping Cart</h2>\n                <div className=\"cart-head\">\n                    <h3>Items</h3>\n                    <h3>price</h3>\n                \n                </div>\n                   {cart.map(item => <Cart item={item} key={item.itemId} handleChange={this.handleChange} delete={this.delete}/>)}\n                <h2 className=\"total\">Subtotal: ${this.state.totalPrice}</h2>\n            \n            </div>}/>\n      \n      \n      </Switch>\n    </div>\n  );\n}\n        \n    }\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}